@value primary, secondary, ternary, quaternary, quinary, ultraLightGray, primaryShade, lightGray, darkishGray, moderateGray from '../helpers/colors.css';

.container {
    display: grid;
    grid-template-columns: 47% 47%;
    grid-template-rows: auto;
    column-gap: 6%;
    justify-items: flex-start;
}

.titleContainerButtons {
    display: flex;
    flex-direction: row;
    align-items: center;

    position: relative;
}

.questionTooltipContainer {
    margin: 0 0 0 0.5rem;
    /*align-items: center;*/
    height: 100%;
}

.questionTooltip {
    /*opacity: 1 !important;*/
}

.questionTooltip > :global(.tooltip-inner) {
    background-color: white;
    /*opacity: 1 !important;*/
    color: inherit;
    border: 1px solid rgba(0,0,0,.15);
    border-radius: .25rem;
}

/*.questionTooltip :global(.bs-tooltip-auto[x-placement^="left"] span.arrow::before),*/
/*.questionTooltip :global(.bs-tooltip-right .arrow::before) {*/
/*    border-right-color: #4a7efa;*/
/*}*/

/*.questionTooltip > :global(div.arrow::before) {*/
/*    border-bottom-color: white !important;*/
/*    color: white !important;*/
/*}*/


.container > div {
    /*flex: 47%;*/
    width: 100%;
}


.administrationSectionContainer {

}

.rubricSectionContainer {
    /*grid-column: 1 / 2;*/
}

.statisticSectionContainer {
    /*grid-column: 1 / 2;*/
}

.tasksSectionContainer {
    /*grid-column: 2 / 3*/
    /*grid-row: 1 / 3;*/
}

.administrationSectionContainerBody {
    display: grid;
    grid-template-columns: 47% 47%;
    grid-template-rows: auto;
    column-gap: 6%;
    justify-items: flex-start;

    row-gap: 0.5rem;
    width: 100%;
    /*height: 100%;*/
}

.administrationSectionContainerBody > button {
    width: 100%;
}

.card {
    position:relative;
    width: 100%;
    margin-bottom: 1rem;
    min-height: 10rem;

    display: flex;
    flex-direction: row;
    align-items: center;
    height: 100%;
}

/* issues */
.issuesContainer {
    flex: 3;
}

.issueCard {
    padding: 1rem;
}

.issueCard:not(:last-child) {
    margin-bottom: 0.5rem;
}

.issueCardTitle {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.2rem;
}

.issueCardTitle > *:first-child {
    display: flex;
    flex-direction: column;

}

.issueCardTitle h5 {
    margin: 0 0 0.3rem 0;
}

.issueCardBadges {
    margin-bottom: 0.3rem;
}

.issuesCardExpanded {

}

.issuesCardExpandButton svg {
    color: #5b5b5b;
    transition: transform .1s ease-in-out;
}

.issuesCardExpandButton:hover svg {
    color: white;
}

.issuesCardExpanded .issuesCardExpandButton svg {
    transform: rotate(180deg);
}

.issueCardSolution {
    margin-top: 0.5rem;
}

.issueCardSolution h5 {
    margin-bottom: 0.3rem;
}
.gradeEditorCardFooter {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
}

.gradeEditorCardFooter > * {
    margin-left: 0.5rem;
}

.buttonGroup {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.buttonGroup > *:not(:last-child) {
    margin-right: 0.5rem;
}


/* issues */
.card {
    position:relative;
    width: 100%;
    margin-bottom: 1rem;

    /*min-height: 10rem;*/
}

.cardBodyContainer {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    /*height: 100%;*/
}

.cardBodyContent {
    /*display: flex;*/
    /*flex-direction: row;*/
    /*align-items: flex-end;*/
    /*justify-content: space-between;*/
}

.cardBodyTitle {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
}


.cardBodyTitleButtonGroup {
    display: flex;
    flex-direction: row;
    align-items: center;
}


.cardContentType {
    /*font-size: 0.8rem;*/
}

.cardContentTypeCourse {
    color: secondary;
}

.cardContentTypeProject {
    color: quinary;
}

.cardButtonContainer {
    color: primary;
}

.cardBlock {
    display: block;
}


.issuesCardExpandButton svg {
    color: #5b5b5b;
    transition: transform .1s ease-in-out;
}

.issuesCardExpandButton:hover svg {
    color: white;
}

.cardExpanded .issuesCardExpandButton svg {
    transform: rotate(180deg);
}
